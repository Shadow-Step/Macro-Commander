<Window x:Class="Macro_Commander.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Macro_Commander"
        xmlns:statics="clr-namespace:Macro_Commander.res"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Closing="Window_Closing" Loaded="Window_Loaded">
    <Window.Resources>
        <local:ColorConverter x:Key="BorderBrushConverter"/>
        <local:ActionTypeConverter x:Key="ActionTypeConverter"/>
        <local:BitmapSourceConverter x:Key="BitmapSourceConverter"/>

        <DataTemplate x:Key="ListBoxUnselected">
            <Border Width="125" CornerRadius="4" BorderThickness="2" BorderBrush="{Binding Path=ActionType, Converter={StaticResource BorderBrushConverter}}" Margin="2 2 2 2">
                <StackPanel Orientation="Horizontal">
                    <Border x:Name="Brd" BorderThickness="1" BorderBrush="Black" CornerRadius="4">
                        <Image Margin="1 1 1 1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Source="{Binding Path=Image, Converter={StaticResource BitmapSourceConverter}}"/>
                    </Border>
                    <Separator/>
                    <StackPanel Orientation="Vertical" Margin="2 0 2 0">
                        <TextBlock FontWeight="Bold" Foreground="Black" Text="{Binding StringFormat=X: {0}, Path=X}"/>
                        <TextBlock FontWeight="Bold" Foreground="Black" Text="{Binding StringFormat=Y: {0}, Path=Y}"/>
                        <TextBlock FontWeight="Bold" Foreground="Black" Text="{Binding StringFormat=P: {0}, Path=Pause}"/>
                    </StackPanel>
                </StackPanel>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="ListBoxSelected">
            <Border Width="125" CornerRadius="4" BorderThickness="2" BorderBrush="Red" Margin="2 2 2 2">
                <StackPanel Orientation="Horizontal">
                    <Border x:Name="Brd" BorderThickness="1" BorderBrush="Black" CornerRadius="4">
                        <Image Margin="1 1 1 1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Source="{Binding Path=Image, Converter={StaticResource BitmapSourceConverter}}"/>
                    </Border>
                    <Separator/>
                    <StackPanel Orientation="Vertical" Margin="2 0 2 0">
                        <TextBlock FontWeight="Bold" Foreground="Red" Text="{Binding StringFormat=X: {0}, Path=X}"/>
                        <TextBlock FontWeight="Bold" Foreground="Red" Text="{Binding StringFormat=Y: {0}, Path=Y}"/>
                        <TextBlock FontWeight="Bold" Foreground="Red" Text="{Binding StringFormat=P: {0}, Path=Pause}"/>
                    </StackPanel>
                </StackPanel>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="ActionTemplate">
            <Border Width="125" CornerRadius="4" BorderThickness="2" BorderBrush="{Binding Path=ActionType, Converter={StaticResource BorderBrushConverter}}" Margin="2 2 2 2">
                <StackPanel Orientation="Vertical" Margin="2 0 2 0">
                    <TextBlock FontWeight="Bold" Foreground="Black" Text="{Binding StringFormat=A: {0}, Path=ActionType}"/>
                    <TextBlock FontWeight="Bold" Foreground="Black" Text="{Binding StringFormat=H: {0}, Path=HotKey}"/>
                    <TextBlock FontWeight="Bold" Foreground="Black" Text="{Binding StringFormat=P: {0}, Path=Pause}"/>
                </StackPanel>
            </Border>
        </DataTemplate>
        <Style x:Key="ListBoxStyle" TargetType="ListBox">
            <Setter Property="IsEnabled" Value="False"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=SelectedMacro.StartedMutex}" Value="False">
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
            </Style.Resources>
        </Style>
        <Style x:Key="ListBoxItems" TargetType="ListBoxItem">
            <Setter Property="ContentTemplate" Value="{StaticResource ListBoxUnselected}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource ListBoxSelected}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MenuItemStyle" TargetType="MenuItem">
            <Setter Property="Foreground" Value="LightGray"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#4d4d4d"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
            <Border Name="Brd" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderThickness="1">
                <ContentPresenter RecognizesAccessKey="True"  Margin="{TemplateBinding Padding}"></ContentPresenter>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Brd" Property="Background" Value="#4d4d4d"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Brd" Property="Background" Value="#1d1d1d"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="25"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="25"/>
        </Grid.RowDefinitions>
        
        <Menu Grid.Row="0" Background="LightGray">
            <MenuItem Header="Save" Command="{Binding Path=CommandSaveToFile}"/>
            <MenuItem Header="Load" Command="{Binding Path=CommandLoadFromFile}"/>
            <MenuItem Header="Add Scenario" Command="{Binding Path=CommandAddScenario}"/>
        </Menu>
        <ToolBar Grid.Row="1" Background="LightGray">
            
        </ToolBar>
        <TabControl Grid.Row="2" Margin="15 5 15 5">
            <!--Scenario-->
            <TabItem Header="Scenarios">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="0.15*" MinWidth="100"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <!-- DataGrids Grid-->
                    <Border BorderThickness="2" BorderBrush="Black" Grid.Column="0" Grid.Row="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <!--Menu-->
                            <Menu Grid.Row="0" Grid.ColumnSpan="3" Background="LightGray">
                                <Button Content="&#9650;" Width="20" Command="{Binding Path=SelectedScenario.CommandMoveMacroUp}" CommandParameter="{Binding Path=SelectedScenario.SelectedIndex}"/>
                                <Button Content="&#9660;" Width="20" Command="{Binding Path=SelectedScenario.CommandMoveMacroDown}" CommandParameter="{Binding Path=SelectedScenario.SelectedIndex}"/>
                            </Menu>
                            <!--Scenario macros-->
                            <DataGrid Grid.Column="0" SelectionMode="Single" Grid.Row="1" CanUserSortColumns="False" CanUserAddRows="False" IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding Path=SelectedScenario.MacroList}" SelectedIndex="{Binding Path=SelectedScenario.SelectedIndex}">
                                <DataGrid.Resources>
                                    <Style TargetType="DataGridRow">
                                        <EventSetter Event="MouseDoubleClick" Handler="ScenarioMacros_MouseDoubleClick"/>
                                    </Style>
                                </DataGrid.Resources>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}"/>
                                    <DataGridTextColumn Header="Actions" Binding="{Binding Path=Actions.Count}"/>
                                    <DataGridTextColumn Header="Execution Time" Binding="{Binding Path=TotalExecutionTime}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <GridSplitter Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5"/>
                            <!--Available macros-->
                            <DataGrid Grid.Column="2" Grid.Row="1" CanUserAddRows="False" IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding Path=MacroList}" SelectedItem="{Binding Path=SelectedScenario.PreviewMacro}">
                                <DataGrid.Resources>
                                    <Style TargetType="DataGridRow">
                                        <EventSetter Event="MouseDoubleClick" Handler="AvailableMacros_MouseDoubleClick"/>
                                    </Style>
                                </DataGrid.Resources>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}"/>
                                    <DataGridTextColumn Header="Actions" Binding="{Binding Path=Actions.Count}"/>
                                    <DataGridTextColumn Header="Execution Time" Binding="{Binding Path=TotalExecutionTime}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Border>
                    <!-- Scenarios Grid -->
                    <DataGrid AutoGenerateColumns="False" HeadersVisibility="None" Grid.Row="0" Grid.Column="2" ItemsSource="{Binding Path=Scenarios}" SelectedItem="{Binding Path=SelectedScenario}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="*" Binding="{Binding Path=Name}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <!-- Preview List Grid-->
                    <ListBox Grid.Row="2" Grid.Column="0" Style="{StaticResource ListBoxStyle}" ItemContainerStyle="{StaticResource ListBoxItems}" ItemsSource="{Binding Path=SelectedScenario.PreviewMacro.Actions}" SelectedItem="{Binding Path=SelectedScenario.PreviewMacro.SelectedAction}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                    <!-- Options Grid-->
                    <Grid Grid.Row="2" Grid.Column="2" DataContext="{Binding Path=SelectedScenario}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" Margin="0 2 0 0" Grid.Column="0" Text="Mode:"/>
                        <TextBlock Grid.Row="1" Margin="0 2 0 0" Grid.Column="0" Text="Delay:"/>
                        <TextBlock Grid.Row="2" Margin="0 2 0 0" Grid.Column="0" Text="Loop Time:"/>
                        <TextBlock Grid.Row="3" Margin="0 2 0 0" Grid.Column="0" Text="HotKey:"/>

                        <ComboBox Grid.Row="0" Grid.Column="1" Margin="5 0 0 0" ItemsSource="{x:Static statics:Statics.ExecutionModes}" SelectedItem="{Binding Path=ExecutionMode}"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Margin="5 2 0 0" Text="{Binding Path=DelayTime}"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Margin="5 2 0 0" Text="{Binding Path=LoopTime}"/>
                        <TextBox Grid.Row="3" Grid.Column="1" Margin="5 2 0 0" Text="{Binding Path=HotKey}"/>
                        <CheckBox Grid.Row="4" Grid.ColumnSpan="2" Margin="0 2 0 0" Content="Delayed Launch" IsChecked="{Binding Path=DelayedLaunch}"/>

                    </Grid>
                    
                    <!--Splitters-->
                    <GridSplitter Grid.Row="1" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="5"/>
                    <GridSplitter Grid.RowSpan="3" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5"/>
                </Grid>
            </TabItem>
            <!--Macro-->
            <TabItem Header="Macro Constructor">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" MinWidth="150"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="0.15*" MinWidth="150"/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.15*" MinHeight="70"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*" MinHeight="150"/>
                        </Grid.RowDefinitions>
                        <ListBox Grid.Row="0" ItemsSource="{Binding Path=ActionTemplates}" ItemTemplate="{StaticResource ActionTemplate}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                        <GridSplitter Grid.Row="1" Height="5" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                        <Border Grid.Row="2" BorderThickness="2" BorderBrush="Black">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                                <Menu Grid.Row="0" Background="LightGray">
                                    <Button Content="&lt;" Width="20" Command="{Binding Path=SelectedMacro.CommandMoveBackwards}" CommandParameter="{Binding Path=SelectedMacro.SelectedAction}"/>
                                    <Button Content="&gt;" Width="20" Command="{Binding Path=SelectedMacro.CommandMoveForward}" CommandParameter="{Binding Path=SelectedMacro.SelectedAction}"/>
                                    <Button Content="|--|" Command="{Binding Path=SelectedMacro.CommandDelAction}" CommandParameter="{Binding Path=SelectedMacro.SelectedAction}"/>
                                </Menu>
                            <ListBox Grid.Row="1" Style="{StaticResource ListBoxStyle}" ItemContainerStyle="{StaticResource ListBoxItems}" ItemsSource="{Binding Path=SelectedMacro.Actions}" SelectedItem="{Binding Path=SelectedMacro.SelectedAction}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </Grid>
                        </Border>
                    </Grid>

                    <GridSplitter Grid.Column="1" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Center"/>

                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" MinHeight="100"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="0.25*" MinHeight="100"/>
                        </Grid.RowDefinitions>
                        
                        <!--Macros List box-->
                        <Grid Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <DataGrid Grid.Row="0" HeadersVisibility="None" ItemsSource="{Binding Path=MacroList}" GridLinesVisibility="None" SelectedItem="{Binding Path=SelectedMacro}" AutoGenerateColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Width="*" Binding="{Binding Path=Name}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Button Margin="0 3 0 0" Grid.Row="1" Content="Add" Command="{Binding Path=CommandAddMacro}"/>
                        </Grid>
                        <GridSplitter Grid.Row="1" Height="5" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

                        <!--Options-->
                        <Grid Grid.Row="2" DataContext="{Binding Path=SelectedMacro.SelectedAction}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Action:"/>
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="X:"/>
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Y:"/>
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Pause:"/>
                            <TextBlock Grid.Row="4" Grid.Column="0" Text="Times:"/>
                            <ComboBox Grid.Row="0" Margin="5 0 0 0" Grid.Column="1" ItemsSource="{x:Static statics:Statics.ActionTypes}" SelectedItem="{Binding Path=ActionType}" />
                            <TextBox Grid.Row="1" Margin="5 0 0 0" Grid.Column="1" Text="{Binding Path=X}"/>
                            <TextBox Grid.Row="2" Margin="5 0 0 0" Grid.Column="1" Text="{Binding Path=Y}"/>
                            <TextBox Grid.Row="3" Margin="5 0 0 0" Grid.Column="1" Text="{Binding Path=Pause}"/>
                            <TextBox Grid.Row="4" Margin="5 0 0 0" Grid.Column="1" Text="{Binding Path=Times}"/>
                        </Grid>
                        <!--<StackPanel Grid.Row="2" DataContext="{Binding Path=SelectedMacro.SelectedAction}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Action:" MinWidth="50"/>
                                <TextBox Text="{Binding Path=ActionType, Converter={StaticResource ActionTypeConverter}}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="X:" MinWidth="50"/>
                                <TextBox Text="{Binding Path=X}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Y:" MinWidth="50"/>
                                <TextBox Text="{Binding Path=Y}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Pause:" MinWidth="50"/>
                                <TextBox Text="{Binding Path=Pause}"/>
                            </StackPanel>
                        </StackPanel>-->
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
        <StatusBar Grid.Row="3" Background="LightGray">

        </StatusBar>
    </Grid>
</Window>

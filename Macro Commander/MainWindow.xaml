<Window x:Class="Macro_Commander.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Macro_Commander"
        xmlns:statics="clr-namespace:Macro_Commander.res"
        mc:Ignorable="d"
        Title="{Binding StringFormat=Macro Commander - {0}, Path=ProjectPath, TargetNullValue=Macro Commander}" Height="450" Width="800" Closing="Window_Closing" Loaded="Window_Loaded">
    <Window.Resources>
        <local:ColorConverter x:Key="BorderBrushConverter"/>
        <local:ActionTypeConverter x:Key="ActionTypeConverter"/>
        <local:BitmapSourceConverter x:Key="BitmapSourceConverter"/>
        <local:HotKeyConverter x:Key="HotKeyConverter"/>
        <local:ActionTemplateStyleSelector x:Key="ActionTemplateStyleSelector"/>
        <local:ValueNullConverter x:Key="ValueNullConverter"/>
        <local:VisibilityNullConverter x:Key="VisibilityNullConverter"/>
        <local:GroupColorConverter x:Key="GroupColorConverter"/>
        <!--Properties Styles-->
        <Style x:Key="PropertyTextBlock" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 2 0 0"/>
            <Setter Property="Grid.Column" Value="0"/>
        </Style>
        <Style x:Key="PropertyValueHolder" TargetType="Control">
            <Setter Property="Margin" Value="5 2 0 0"/>
            <Setter Property="Grid.Column" Value="1"/>
        </Style>

        <DataTemplate x:Key="ListBoxUnselected">
            <Border Width="125" CornerRadius="4" BorderThickness="2" BorderBrush="{Binding Path=ActionType, Converter={StaticResource BorderBrushConverter}}" Margin="2 2 2 2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Border x:Name="Brd" BorderThickness="1" BorderBrush="Black" CornerRadius="4" Grid.Column="0" Grid.Row="0">
                        <Grid>
                            <Image Margin="1 1 1 1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Source="{Binding Path=Image, Converter={StaticResource BitmapSourceConverter}}"/>
                            <TextBlock VerticalAlignment="Bottom" HorizontalAlignment="Left" Text="!" FontWeight="Bold" Margin="2 0 0 1" Foreground="{Binding Path=Condition,Converter={StaticResource GroupColorConverter},ConverterParameter=Condition}"/>
                            <Ellipse VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0 0 2 2" Height="12" Width="12" StrokeThickness="1" Stroke="{Binding Path=Group, Converter={StaticResource GroupColorConverter},ConverterParameter=Stroke}" Fill="{Binding Path=Group, Converter={StaticResource GroupColorConverter}}"/>
                        </Grid>
                    </Border>
                    <StackPanel Orientation="Vertical" Margin="3 0 2 0" Grid.Column="1" Grid.Row="0">
                        <TextBlock FontWeight="Bold" FontSize="12" Foreground="Black" Text="{Binding StringFormat=X: {0}, Path=X}"/>
                        <TextBlock FontWeight="Bold" FontSize="12" Foreground="Black" Text="{Binding StringFormat=Y: {0}, Path=Y}"/>
                        <TextBlock FontWeight="Bold" FontSize="12" Foreground="Black" Text="{Binding StringFormat=P: {0}, Path=Pause}"/>
                        <TextBlock FontWeight="Bold" FontSize="12" Foreground="Black" Text="{Binding StringFormat=C: {0}, Path=Clicks}"/>
                    </StackPanel>
                    
                </Grid>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="ListBoxSelected">
            <Border Width="125" CornerRadius="4" BorderThickness="2" BorderBrush="Red" Margin="2 2 2 2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Border x:Name="Brd" BorderThickness="1" BorderBrush="Black" CornerRadius="4" Grid.Column="0" Grid.Row="0">
                        <Grid>
                            <Image Margin="1 1 1 1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Source="{Binding Path=Image, Converter={StaticResource BitmapSourceConverter}}"/>
                            <TextBlock VerticalAlignment="Bottom" HorizontalAlignment="Left" Text="!" FontWeight="Bold" Margin="2 0 0 1" Foreground="{Binding Path=Condition,Converter={StaticResource GroupColorConverter},ConverterParameter=Condition}"/>
                            <Ellipse VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0 0 2 2" Height="12" Width="12" StrokeThickness="1" Stroke="{Binding Path=Group, Converter={StaticResource GroupColorConverter},ConverterParameter=Stroke}" Fill="{Binding Path=Group, Converter={StaticResource GroupColorConverter}}"/>
                        </Grid>
                    </Border>
                    <StackPanel Orientation="Vertical" Margin="3 0 2 0" Grid.Column="1" Grid.Row="0">
                        <TextBlock FontWeight="Bold" FontSize="12" Foreground="Red" Text="{Binding StringFormat=X: {0}, Path=X}"/>
                        <TextBlock FontWeight="Bold" FontSize="12" Foreground="Red" Text="{Binding StringFormat=Y: {0}, Path=Y}"/>
                        <TextBlock FontWeight="Bold" FontSize="12" Foreground="Red" Text="{Binding StringFormat=P: {0}, Path=Pause}"/>
                        <TextBlock FontWeight="Bold" FontSize="12" Foreground="Red" Text="{Binding StringFormat=C: {0}, Path=Clicks}"/>
                    </StackPanel>

                </Grid>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="ActionHiddenDataTemplate">
            <Border Width="15" Height="64" CornerRadius="4" BorderThickness="2" BorderBrush="Red" Margin="2 2 2 2">
                
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="ActionTemplateOrigin">
            <Border Width="125" Height="70" CornerRadius="4" BorderThickness="2" BorderBrush="{Binding Path=ActionType, Converter={StaticResource BorderBrushConverter}}" Margin="2 2 2 2">
                <StackPanel Orientation="Vertical" Margin="2 0 2 0">
                    <TextBlock FontWeight="Bold" FontSize="12" Foreground="Black" Text="{Binding StringFormat=Action: {0}, Path=ActionType}"/>
                    <TextBlock FontWeight="Bold" FontSize="12" Foreground="Black" Text="{Binding StringFormat=HotKey: {0}, Path=HotKey,Converter={StaticResource HotKeyConverter}}"/>
                    <TextBlock FontWeight="Bold" FontSize="12" Foreground="Black" Text="{Binding StringFormat=Pause: {0}s., Path=Pause}"/>
                    <TextBlock FontWeight="Bold" FontSize="12" Foreground="Black" Text="{Binding StringFormat=Clicks: {0}, Path=Clicks}"/>
                </StackPanel>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="ActionTemplateEditing">
            <Border Width="125" CornerRadius="4" BorderThickness="2" BorderBrush="{Binding Path=ActionType, Converter={StaticResource BorderBrushConverter}}" Margin="2 2 2 2">
                <Grid Margin="2 2 2 2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    
                    <ComboBox Grid.Row="0" Grid.ColumnSpan="2" ItemsSource="{x:Static statics:Statics.ActionTypes}" SelectedItem="{Binding Path=ActionType}"/>
                    
                    <TextBlock Grid.Row="1" Style="{StaticResource PropertyTextBlock}" FontWeight="Bold" FontSize="12" Foreground="Black" Text="HotKey:"/>
                    <TextBlock Grid.Row="2" Style="{StaticResource PropertyTextBlock}" FontWeight="Bold" FontSize="12" Foreground="Black" Text="Pause:"/>
                    <TextBlock Grid.Row="3" Style="{StaticResource PropertyTextBlock}" FontWeight="Bold" FontSize="12" Foreground="Black" Text="Clicks:"/>


                    <TextBox Grid.Row="1" x:Name="TemplateHotKeyTextBox" Style="{StaticResource PropertyValueHolder}" Text="{Binding Path=HotKey,Converter={StaticResource HotKeyConverter}}" KeyDown="HotKeyTextBox_KeyDown" KeyUp="HotKeyTextBox_KeyUp"/>
                    <TextBox Grid.Row="2" Style="{StaticResource PropertyValueHolder}" Text="{Binding Path=Pause}"/>
                    <TextBox Grid.Row="3" Style="{StaticResource PropertyValueHolder}" Text="{Binding Path=Clicks}"/>

                    <Button Content="Accept" Grid.Row="4" Grid.ColumnSpan="2" MaxWidth="75" Margin="0 5 0 0" Click="AcceptActionTemplateChanges"/>
                </Grid>
            </Border>
        </DataTemplate>
        <DataTemplate x:Key="ActionTemplatePlaceHolder">
            <Border Width="125" Height="70" CornerRadius="4" BorderThickness="2" BorderBrush="#2d2d2d" Margin="2 2 2 2">
                <TextBlock FontSize="22" HorizontalAlignment="Center" VerticalAlignment="Center" Text="New"/>
            </Border>
        </DataTemplate>
        
        <Style x:Key="ListBoxStyle" TargetType="ListBox">
            <Setter Property="IsEnabled" Value="False"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=SelectedMacro.StartedMutex}" Value="False">
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
            </Style.Resources>
        </Style>
        <Style x:Key="ListBoxItems" TargetType="ListBoxItem">
            <Setter Property="ContentTemplate" Value="{StaticResource ListBoxUnselected}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Hidden}" Value="true">
                    <Setter Property="Opacity" Value="0.2"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=Hidden}" Value="True"/>
                        <Condition Binding="{Binding Path=DataContext.MinimizeHidden,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="ContentTemplate" Value="{StaticResource ActionHiddenDataTemplate}"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=Hidden}" Value="True"/>
                        <Condition Binding="{Binding Path=DataContext.ShowHidden,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBox}}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource ListBoxSelected}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MenuItemStyle" TargetType="MenuItem">
            <Setter Property="Foreground" Value="LightGray"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#4d4d4d"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TemplateGridStyle" TargetType="Grid">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=SelectedTemplate,Converter={StaticResource ValueNullConverter}}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TemplateOriginStyle" TargetType="ListBoxItem">
            <Setter Property="ContentTemplate" Value="{StaticResource ActionTemplateOrigin}"/>
            <EventSetter Event="MouseDoubleClick" Handler="TemplateItem_MouseDoubleClick"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=EditingMode}" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource ActionTemplateEditing}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TemplatePlaceHolderStyle" TargetType="ListBoxItem">
            <Setter Property="ContentTemplate" Value="{StaticResource ActionTemplatePlaceHolder}"/>
            <EventSetter Event="MouseDoubleClick" Handler="TemplateItem_MouseDoubleClick"/>
        </Style>

        <Style x:Key="DataGridSelectedRowStyle" TargetType="DataGridRow">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="ButtonTemplate" TargetType="Button">
            <Border Name="Brd" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderThickness="1">
                <ContentPresenter RecognizesAccessKey="True"  Margin="{TemplateBinding Padding}"></ContentPresenter>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="Brd" Property="Background" Value="#4d4d4d"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="Brd" Property="Background" Value="#1d1d1d"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ToolBarButton" TargetType="Button">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="22"/>
        </Style>
        <Style x:Key="ActionPropertiesGrid" TargetType="Grid">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=SelectedMacro.SelectedAction,Converter={StaticResource ValueNullConverter}}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ScenarioPropertiesGrid" TargetType="Grid">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=SelectedScenario,Converter={StaticResource ValueNullConverter}}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        
        <Menu Grid.Row="0" Background="LightGray">
            <MenuItem Header="File">
                <MenuItem Header="New" Click="MenuNewClick"/>
                <MenuItem Header="Open" Click="MenuOpenClick"/>
                <Separator/>
                <MenuItem Header="Save" Click="MenuSaveClick"/>
                <MenuItem Header="Save as" Click="MenuSaveAsClick"/>
            </MenuItem>
            <MenuItem Header="Help" Click="ShowHelpWindow"/>
            <MenuItem Header="View">
                <MenuItem Header="Minimize hidden" IsCheckable="True" IsChecked="{Binding Path=MinimizeHidden}"/>
                <MenuItem Header="Show hidden" IsCheckable="True" IsChecked="{Binding Path=ShowHidden}"/>
            </MenuItem>
        </Menu>
        <ToolBar Grid.Row="1" Background="LightGray">
            <Button Style="{StaticResource ToolBarButton}" Content="N"/>
            <Button Style="{StaticResource ToolBarButton}" Content="L"/>
            <Button Style="{StaticResource ToolBarButton}" Content="S"/>
            <Button Style="{StaticResource ToolBarButton}" Content="Sa"/>
            <Separator/>
            <CheckBox IsChecked="{Binding Path=ImitateClick}" Content="Click"/>
            <Separator/>
            <TextBlock Margin="5 0 0 0" Text="Resolution:" VerticalAlignment="Center"/>
            <ComboBox Margin="5 0 0 0" ItemsSource="{x:Static statics:Statics.Resolutions}" SelectedItem="{Binding Path=Resolution}"/>
        </ToolBar>
        <TabControl Grid.Row="2" Margin="15 5 15 5">
            <!--Scenario TAB-->
            <TabItem Header="Scenarios">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="0.15*" MinWidth="100"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <!-- Macros tables Grid-->
                    <Border BorderThickness="2" BorderBrush="Black" Grid.Column="0" Grid.Row="0">
                        <Grid IsEnabled="{Binding Path=SelectedScenario,Converter={StaticResource ValueNullConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <!--Menu-->
                            <Grid Grid.Row="0" Grid.ColumnSpan="3" Background="LightGray">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Menu Grid.Column="0" Background="Transparent">
                                    <Button Content="&#9650;" Width="20" Command="{Binding Path=SelectedScenario.CommandMoveMacroUp}" CommandParameter="{Binding Path=SelectedScenario.SelectedIndex}"/>
                                    <Button Content="&#9660;" Width="20" Command="{Binding Path=SelectedScenario.CommandMoveMacroDown}" CommandParameter="{Binding Path=SelectedScenario.SelectedIndex}"/>
                                </Menu>
                                <TextBlock Grid.Column="1" Text="{Binding Path=SelectedScenario.Name}" FontSize="18"/>
                            </Grid>
                            <!--Scenario macros-->
                            <GroupBox Margin="3 3 3 3" Header="Scenario macros" Grid.Column="0" Grid.Row="1">
                                <DataGrid Margin="3 3 3 3" SelectionMode="Single" CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False" ItemsSource="{Binding Path=SelectedScenario.MacroList}" SelectedIndex="{Binding Path=SelectedScenario.SelectedIndex}">
                                <DataGrid.Resources>
                                    <Style TargetType="DataGridRow">
                                        <EventSetter Event="MouseDoubleClick" Handler="ScenarioMacros_MouseDoubleClick"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="FontWeight" Value="Bold"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.Resources>
                                <DataGrid.Columns>
                                        <DataGridTextColumn IsReadOnly="True" Header="Name" Binding="{Binding Path=Name}"/>
                                        <DataGridTextColumn IsReadOnly="True" Header="Actions" Binding="{Binding Path=Actions.Count}"/>
                                        <DataGridTextColumn IsReadOnly="True" Header="Execution Time" Binding="{Binding Path=TotalExecutionTime}"/>
                                        <DataGridTextColumn IsReadOnly="False" Header="Param" Binding="{Binding Path=Param}"/>
                                    </DataGrid.Columns>
                            </DataGrid>
                            </GroupBox>
                            
                            <GridSplitter Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5"/>
                            <!--Available macros-->
                            <GroupBox Margin="3 3 3 3" Header="Available macros" Grid.Column="2" Grid.Row="1">
                                <DataGrid CanUserAddRows="False" IsReadOnly="True" AutoGenerateColumns="False" ItemsSource="{Binding Path=MacroList}" SelectedItem="{Binding Path=SelectedScenario.PreviewMacro}">
                                <DataGrid.Resources>
                                    <Style TargetType="DataGridRow">
                                        <EventSetter Event="MouseDoubleClick" Handler="AvailableMacros_MouseDoubleClick"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="FontWeight" Value="Bold"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.Resources>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Name}"/>
                                    <DataGridTextColumn Header="Actions" Binding="{Binding Path=Actions.Count}"/>
                                    <DataGridTextColumn Header="Execution Time" Binding="{Binding Path=TotalExecutionTime}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            </GroupBox>
                            <TextBlock Text="No active scenario" FontSize="36" Grid.ColumnSpan="3" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding Path=SelectedScenario,Converter={StaticResource VisibilityNullConverter},ConverterParameter=1}"/>
                        </Grid>
                    </Border>
                    <!-- Scenarios Grid -->
                    <GroupBox Header="Scenarios" Grid.Row="0" Grid.Column="2">
                        <Grid Margin="3 3 3 3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <ListBox Grid.Row="0" ItemsSource="{Binding Path=Scenarios}" SelectedItem="{Binding Path=SelectedScenario}">
                                <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Add" Command="{Binding Path=CommandAddItemToList}" CommandParameter="Scenario"/>
                                        <MenuItem Header="Remove" Command="{Binding Path=CommandRemoveItemFromList}" CommandParameter="{Binding Path=SelectedScenario}"/>
                                        <MenuItem Header="Rename" Command="{Binding Path=CommandEditItem}" CommandParameter="{Binding Path=SelectedScenario}"/>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                                <ListBox.Resources>
                                    <DataTemplate x:Key="OriginTemplate">
                                        <TextBlock Text="{Binding Path=Name}"/>
                                    </DataTemplate>
                                    <DataTemplate x:Key="EditTemplate">
                                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Initialized="EditNameTextBox_Initialized" LostKeyboardFocus="EditNameTextBox_LostKeyboardFocus" KeyUp="EditNameTextBox_KeyUp"/>
                                    </DataTemplate>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="ContentTemplate" Value="{StaticResource OriginTemplate}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="FontWeight" Value="Bold"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding Path=EditingMode}" Value="True">
                                                <Setter Property="ContentTemplate" Value="{StaticResource EditTemplate}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.Resources>
                            </ListBox>
                            <Button Content="Add" MaxWidth="100" Grid.Row="1" Margin="0 5 0 5" Command="{Binding Path=CommandAddItemToList}" CommandParameter="Scenario"/>
                    </Grid>
                    </GroupBox>
                    <!-- Preview List Grid-->
                    <GroupBox Header="Macro preview" Grid.Row="2" Grid.Column="0">
                        <ListBox Margin="3 3 3 3" Style="{StaticResource ListBoxStyle}" ItemContainerStyle="{StaticResource ListBoxItems}" ItemsSource="{Binding Path=SelectedScenario.PreviewMacro.Actions}" SelectedItem="{Binding Path=SelectedScenario.PreviewMacro.SelectedAction}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                    </GroupBox>
                    <!-- Properties Grid-->
                    <GroupBox Margin="3 3 3 3" Header="Properties" Grid.Row="2" Grid.Column="2">
                        <Grid Style="{StaticResource ScenarioPropertiesGrid}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Style="{StaticResource PropertyTextBlock}" Text="Mode:"/>
                            <TextBlock Grid.Row="1" Style="{StaticResource PropertyTextBlock}" Text="Delay:"/>
                            <TextBlock Grid.Row="2" Style="{StaticResource PropertyTextBlock}" Text="Loop Time:"/>
                            <TextBlock Grid.Row="3" Style="{StaticResource PropertyTextBlock}" Text="HotKey:"/>
                            <TextBlock Grid.Row="4" Style="{StaticResource PropertyTextBlock}" Text="Start Index:"/>
                            <TextBlock Grid.Row="5" Style="{StaticResource PropertyTextBlock}" Text="End Index:"/>

                            <ComboBox Grid.Row="0" Style="{StaticResource PropertyValueHolder}" ItemsSource="{x:Static statics:Statics.ExecutionModes}" SelectedItem="{Binding Path=SelectedScenario.ExecutionMode}"/>
                            <TextBox Grid.Row="1" Style="{StaticResource PropertyValueHolder}" Text="{Binding Path=SelectedScenario.DelayTime}"/>
                            <TextBox Grid.Row="2" Style="{StaticResource PropertyValueHolder}" Text="{Binding Path=SelectedScenario.LoopTime}"/>
                            <TextBox Grid.Row="3" Style="{StaticResource PropertyValueHolder}" x:Name="ScenarioHotKeyTextBox" Text="{Binding Path=SelectedScenario.HotKey, Converter={StaticResource HotKeyConverter},ConverterParameter=1}" KeyDown="HotKeyTextBox_KeyDown" KeyUp="HotKeyTextBox_KeyUp" />
                            <TextBox Grid.Row="4" Style="{StaticResource PropertyValueHolder}" Text="{Binding Path=SelectedScenario.StartIndex}"/>
                            <TextBox Grid.Row="5" Style="{StaticResource PropertyValueHolder}" Text="{Binding Path=SelectedScenario.EndIndex}"/>
                            <CheckBox Grid.Row="6" Grid.ColumnSpan="2" Margin="0 2 0 0" Content="Delayed Launch" IsChecked="{Binding Path=SelectedScenario.DelayedLaunch}"/>

                    </Grid>
                    </GroupBox>
                    <!--Splitters-->
                    <GridSplitter Grid.Row="1" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="5"/>
                    <GridSplitter Grid.RowSpan="3" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5"/>
                </Grid>
            </TabItem>
            <!--Macro TAB-->
            <TabItem Header="Macro Constructor">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" MinWidth="150"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="0.15*" MinWidth="150"/>
                    </Grid.ColumnDefinitions>
                    
                    <!--MainView and Templates-->
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition>
                                <RowDefinition.Style>
                                    <Style TargetType="RowDefinition">
                                        <Setter Property="Height" Value="0.15*"/>
                                        <Setter Property="MinHeight" Value="110"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=SelectedTemplate.EditingMode}" Value="True">
                                                <Setter Property="MinHeight" Value="170"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </RowDefinition.Style>
                            </RowDefinition>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*" MinHeight="150"/>
                        </Grid.RowDefinitions>

                        <!--Templates list-->
                        <GroupBox Header="Templates" Grid.Row="0">
                            <ListBox Margin="0 5 0 0" ItemsSource="{Binding Path=ActionTemplates}" SelectedItem="{Binding Path=SelectedTemplate}">
                            <ListBox.ItemContainerStyleSelector>
                                <local:ActionTemplateStyleSelector TemplateOriginStyle="{StaticResource TemplateOriginStyle}" TemplatePlaceHolderStyle="{StaticResource TemplatePlaceHolderStyle}"/>
                            </ListBox.ItemContainerStyleSelector>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Add template" Command="{Binding Path=CommandAddItemToList}" CommandParameter="ActionTemplate"/>
                                        <MenuItem Header="Remove" Command="{Binding Path=CommandRemoveItemFromList}" CommandParameter="{Binding Path=SelectedTemplate}"/>
                                        <MenuItem Header="Edit" Command="{Binding Path=CommandEditItem}" CommandParameter="{Binding Path=SelectedTemplate}"/>
                                    </ContextMenu>
                                </ListBox.ContextMenu>
                        </ListBox>
                        </GroupBox>
                        
                        <GridSplitter Grid.Row="1" Height="5" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                        
                        <!--MainView-->
                        <Border Grid.Row="2" BorderThickness="2" BorderBrush="Black">
                            <Grid IsEnabled="{Binding Path=SelectedMacro,Converter={StaticResource ValueNullConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <!-- Menu Bar -->
                                <Grid Grid.Row="0" Background="LightGray">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Menu Grid.Column="0" Background="Transparent">
                                        <Button Content="&lt;" Width="20" Command="{Binding Path=SelectedMacro.CommandMoveBackwards}" CommandParameter="{Binding Path=SelectedMacro.SelectedAction}"/>
                                        <Button Content="&gt;" Width="20" Command="{Binding Path=SelectedMacro.CommandMoveForward}" CommandParameter="{Binding Path=SelectedMacro.SelectedAction}"/>
                                        <Button Content="|--|" Command="{Binding Path=SelectedMacro.CommandDelAction}" CommandParameter="{Binding Path=SelectedMacro.SelectedAction}"/>
                                    </Menu>
                                    <TextBlock Grid.Column="1" Text="{Binding Path=SelectedMacro.Name}" FontSize="18" VerticalAlignment="Center"/>
                                    
                                </Grid>
                                
                                <!--MainView List-->
                                <GroupBox Header="Actions" Grid.Row="1">
                                    <ListBox x:Name="MainViewListBox" SelectionMode="Extended" Margin="3 3 3 3" Style="{StaticResource ListBoxStyle}" ItemContainerStyle="{StaticResource ListBoxItems}" ItemsSource="{Binding Path=SelectedMacro.Actions}" SelectedItem="{Binding Path=SelectedMacro.SelectedAction}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                        <ListBox.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Remove" Command="{Binding Path=SelectedMacro.CommandDelAction}" CommandParameter="{Binding Path=SelectedMacro.SelectedAction}"/>
                                                <Separator/>
                                                <MenuItem Header="Merge" Click="MergeIntoGroup"/>
                                                <MenuItem Header="Detach" Click="DetachFromGroup"/>
                                                <Separator/>
                                                <MenuItem Header="Hide" Click="HideSelected"/>
                                                <MenuItem Header="Show" Click="ShowSelected"/>
                                                <MenuItem Header="Unhide All" Command="{Binding Path=SelectedMacro.CommandUnhideAll}"/>
                                            </ContextMenu>
                                        </ListBox.ContextMenu>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel/>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                    </ListBox>
                                </GroupBox>
                                <TextBlock Visibility="{Binding Path=SelectedMacro,Converter={StaticResource VisibilityNullConverter},ConverterParameter=1}" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" Text="No active macro" FontSize="36"/>
                            </Grid>
                        </Border>
                    </Grid>

                    <GridSplitter Grid.Column="1" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Center"/>
                    
                    <!--Macros list and Properties-->
                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" MinHeight="100"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*" MinHeight="100"/>
                        </Grid.RowDefinitions>

                        <!--Macros List box-->
                        <GroupBox Header="Macros" Grid.Row="0">
                            <Grid Margin="0 5 0 0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ListBox Grid.Row="0" ItemsSource="{Binding Path=MacroList}" SelectedItem="{Binding Path=SelectedMacro}" KeyUp="MacrosListBox_KeyUp">
                                    <ListBox.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Add" Command="{Binding Path=CommandAddItemToList}" CommandParameter="Macro"/>
                                            <MenuItem Header="Remove" Command="{Binding Path=CommandRemoveItemFromList}" CommandParameter="{Binding Path=SelectedMacro}"/>
                                            <MenuItem Header="Rename" Command="{Binding Path=CommandEditItem}" CommandParameter="{Binding Path=SelectedMacro}"/>
                                        </ContextMenu>
                                    </ListBox.ContextMenu>
                                    <ListBox.Resources>
                                        <DataTemplate x:Key="OriginTemplate">
                                            <TextBlock Text="{Binding Path=Name}"/>
                                        </DataTemplate>
                                        <DataTemplate x:Key="EditTemplate">
                                            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Initialized="EditNameTextBox_Initialized" LostKeyboardFocus="EditNameTextBox_LostKeyboardFocus" KeyUp="EditNameTextBox_KeyUp"/>
                                        </DataTemplate>
                                        <Style TargetType="ListBoxItem">
                                            <Setter Property="ContentTemplate" Value="{StaticResource OriginTemplate}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter Property="FontWeight" Value="Bold"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding Path=EditingMode}" Value="True">
                                                    <Setter Property="ContentTemplate" Value="{StaticResource EditTemplate}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ListBox.Resources>
                                </ListBox>
                                <Button Margin="0 3 0 0" Grid.Row="1" Content="Add" Command="{Binding Path=CommandAddItemToList}" CommandParameter="Macro"/>
                            </Grid>
                        </GroupBox>

                        <GridSplitter Grid.Row="1" Height="5" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

                        <!--Properties-->
                        <GroupBox Header="Properties" Grid.Row="2">
                            <Grid Margin="0 5 0 0" Style="{StaticResource ActionPropertiesGrid}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Style="{StaticResource PropertyTextBlock}" Text="Action:"/>
                                <TextBlock Grid.Row="1" Style="{StaticResource PropertyTextBlock}" Text="X:"/>
                                <TextBlock Grid.Row="2" Style="{StaticResource PropertyTextBlock}" Text="Y:"/>
                                <TextBlock Grid.Row="3" Style="{StaticResource PropertyTextBlock}" Text="Pause:"/>
                                <TextBlock Grid.Row="4" Style="{StaticResource PropertyTextBlock}" Text="Clicks:"/>
                                <TextBlock Grid.Row="5" Style="{StaticResource PropertyTextBlock}" Text="Group:"/>
                                <ComboBox Grid.Row="0" Style="{StaticResource PropertyValueHolder}" ItemsSource="{x:Static statics:Statics.ActionTypes}" SelectedItem="{Binding Path=SelectedMacro.SelectedAction.ActionType}" />
                                <TextBox Grid.Row="1" Style="{StaticResource PropertyValueHolder}" Text="{Binding Path=SelectedMacro.SelectedAction.X}"/>
                                <TextBox Grid.Row="2" Style="{StaticResource PropertyValueHolder}" Text="{Binding Path=SelectedMacro.SelectedAction.Y}"/>
                                <TextBox Grid.Row="3" Style="{StaticResource PropertyValueHolder}" Text="{Binding Path=SelectedMacro.SelectedAction.Pause}"/>
                                <TextBox Grid.Row="4" Style="{StaticResource PropertyValueHolder}" Text="{Binding Path=SelectedMacro.SelectedAction.Clicks}"/>
                                <TextBox Grid.Row="5" Style="{StaticResource PropertyValueHolder}" Text="{Binding Path=SelectedMacro.SelectedAction.Group}"/>
                                <TextBox Grid.Row="6" Grid.ColumnSpan="2" VerticalAlignment="Stretch" Margin="0 2 0 0" Text="{Binding Path=SelectedMacro.SelectedAction.Condition,ValidatesOnDataErrors=True}"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
        <StatusBar Grid.Row="3" Background="LightGray">
            <StatusBarItem>
                
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
